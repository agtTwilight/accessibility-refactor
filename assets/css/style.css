/* the astrics selects all elements in index.html. border-box makes it so the boarder and padding of elements is incorporated into the elements width and height measurements. padding is used to create space around an element, but within the elements borders, and margin is used to create space around an element, outside of its borders. I also moved the color: white; to this level so we save some lines of code in other selectors.*/
* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    color: #ffffff;
}
/* the body selector below is used to change the background color to grey */
body {
    background-color: #d9dcd6;
}
/* here we selected the header to modify the padding, adjust the font, and change the background color. */
header {
    padding: 20px;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    background-color: #2a607c;
}
/* this selects for the h1 nested inside of our header.*/
header h1 {
    display: inline-block;
    font-size: 48px;
}
/* this selects the span element nested inside our header. I removed the class identifier because it was unecessary. span is specific enough for css since only one span is nested in our header (Note: if more spans were to be included in the header, this rule would apply to them as well). */
header span {
    color: #d9dcd6;
}
/* header nav is used to align the contents of our navigation element to the right side of the page, change the font, and adjust to fit the page how we'd like.*/
header nav {
    padding-top: 15px;
    margin-right: 20px;
    float: right;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    font-size: 20px;
}
/* header nav ul is sufficient to select the unordered list element and remove the bullets that are included to each list element by default. */
header nav ul {
    list-style-type: none;
}
/* used to align each list item in a singel line at the top of the page. */
header nav ul li {
    display: inline-block;
    margin-left: 25px;
}
/* this  removes the underline associated with links, and makes them look like plain text on the webpage.*/
header a {
    text-decoration: none;
}

p {
    font-size: 16px;
}

/* .footer isn't a necessary class when the footer tag exhists. It was moved up here to better flow with CSS specificity rules. */

footer {
    padding: 30px;
    clear: both;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    text-align: center;
}

footer h2 {
    font-size: 20px;
    color: black;
}

footer p {
    color: black;
}

/* The .hero class was changed to .container because it adds a bit more detail to the role of the code in the html file. */

.container {
    height: 800px;
    width: 100%;
    margin-bottom: 25px;
    background-image: url("../images/digital-marketing-meeting.jpg");
    background-size: cover;
    background-position: center;
}

.float-left {
    float: left;
    margin-right: 25px;
}

.float-right {
    float: right;
    margin-left: 25px;
}

.content {
    width: 75%;
    display: inline-block;
    margin-left: 20px;
}

.benefits {
    margin-right: 20px;
    padding: 20px;
    clear: both;
    float: right;
    width: 20%;
    height: 100%;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    background-color: #2589bd;
}

/*  The following were consolodations of the .benifit-X classes to make the code more concise. since we are nested in a class, we can simply use that class as an identifier for the elements we want to apply modifications to (in this case the articles, h3's, and img's). Making classes for each article is not necessary and would decrease the cleanliness of our code.*/

.benefits article {
    margin-bottom: 32px;
}

.benefits h3 {
    margin-bottom: 10px;
    text-align: center;
}

.benefits img {
    display: block;
    margin: 10px auto;
    max-width: 150px;
}

/* the following were modified to all match their respective ID's. Previously there were a few classes mixed in. Since these are all unique in the index.html file, assigning the corresponding articles with ID's makes more sense. */
#search-engine-optimization {
    margin-bottom: 20px;
    padding: 50px;
    height: 300px;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    background-color: #0072bb;
}

#online-reputation-management {
    margin-bottom: 20px;
    padding: 50px;
    height: 300px;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    background-color: #0072bb;
}

#social-media-marketing {
    margin-bottom: 20px;
    padding: 50px;
    height: 300px;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    background-color: #0072bb;
}

#search-engine-optimization img {
    max-height: 200px;
}

#online-reputation-management img {
    max-height: 200px;
}

#social-media-marketing img {
    max-height: 200px;
}

#search-engine-optimization h2 {
    margin-bottom: 20px;
    font-size: 36px;
}

#online-reputation-management h2 {
    margin-bottom: 20px;
    font-size: 36px;
}

#social-media-marketing h2 {
    margin-bottom: 20px;
    font-size: 36px;
}
